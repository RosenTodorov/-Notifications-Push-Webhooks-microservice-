version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/notifications-push-webhooks
    docker:
      - image: golang:1
        environment:
          GOPATH: /go
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            go get -u github.com/mattn/goveralls
            go get -u github.com/jstemmer/go-junit-report
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0
            git clone git@github.com:Financial-Times/upp-coding-standard.git
      - run:
          name: Test Results
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Download vendored dependencies
          command: dep ensure -v -vendor-only
      - run:
          name: Go Build
          command: go build -v
      - run:
          name: Run linters
          command: |
            golangci-lint run --new-from-rev=$(git rev-parse origin/master) --config upp-coding-standard/golangci-config/.golangci.yml
      - run:
          name: Run tests
          command: go test -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run:
          name: Upload coverage
          command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /notifications-push-webhooks
    docker:
      - image: docker:18
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .
workflows:
  version: 2
  test-and-build-docker:
    jobs:
      - build
      - dockerfile:
          requires:
            - build
